apply plugin: 'docker-compose'

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntime.extendsFrom(testRuntime)
}

task integrationTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.allSource.srcDirs
        scopes.TEST.plus += [configurations.integrationTestCompile]
    }
}

tasks.withType(Test) {
    reports.html.setDestination(file("${reporting.baseDir}/${name}"))
}

dockerCompose.isRequiredBy(integrationTest)
dockerCompose {
    useComposeFiles = ['docker-compose.yml']
    captureContainersOutput = true
    stopContainers = true
    removeContainers = true
    removeOrphans = true
}